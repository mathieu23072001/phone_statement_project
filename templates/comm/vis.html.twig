



<html>
<head>
    <title>Network | DataSet</title>

    <style type="text/css">
        html, body {
            font: 11pt arial;
             text-align: center;
        }

        h1 {
            font-size: 150%;
            margin: 5px 0;
        }

        h2 {
            font-size: 100%;
            margin: 5px 0;
        }

        table.view {
            width: 100%;
            text-align: center;
             margin-left: -200px; 
            position: absolute;
               left: 0%;
            
        }

        table td {
            vertical-align: top;
            text-align: center;
            
        }

        table table {
            background-color: #f5f5f5;
            border: 1px solid #e5e5e5;
             text-align: center;
              
        }

        table table td {
            vertical-align: middle;
             text-align: center;
        }

        input[type=text], pre {
            border: 1px solid lightgray;
        }

        pre {
            margin: 0;
            padding: 0px;
            font-size: 10pt;
        }

        #network {
            width: 100%;
            height: 400px;
            border: 1px solid lightgray;
        }
    </style>

    <script type="text/javascript" src="{{asset('Vis/js/vis.js')}}"></script>
    <link href="{{asset('Vis/css/vis-network.min.css')}}" rel="stylesheet" type="text/css"/>

    <script type="text/javascript">
        var nodes, edges, network;

        // convenience method to stringify a JSON object
        function toJSON(obj) {
            return JSON.stringify(obj, null, 4);
        }

        function addNode() {
            try {
                nodes.add({
                    id: document.getElementById('node-id').value,
                    label: document.getElementById('node-label').value
                });
            }
            catch (err) {
                alert(err);
            }
        }

        function updateNode() {
            try {
                nodes.update({
                    id: document.getElementById('node-id').value,
                    label: document.getElementById('node-label').value
                });
            }
            catch (err) {
                alert(err);
            }
        }
        function removeNode() {
            try {
                nodes.remove({id: document.getElementById('node-id').value});
            }
            catch (err) {
                alert(err);
            }
        }

        function addEdge() {
            try {
                edges.add({
                    id: document.getElementById('edge-id').value,
                    from: document.getElementById('edge-from').value,
                    to: document.getElementById('edge-to').value
                });
            }
            catch (err) {
                alert(err);
            }
        }
        function updateEdge() {
            try {
                edges.update({
                    id: document.getElementById('edge-id').value,
                    from: document.getElementById('edge-from').value,
                    to: document.getElementById('edge-to').value
                });
            }
            catch (err) {
                alert(err);
            }
        }
        function removeEdge() {
            try {
                edges.remove({id: document.getElementById('edge-id').value});
            }
            catch (err) {
                alert(err);
            }
        }

        function draw() {
            // create an array with nodes
            nodes = new vis.DataSet();
            nodes.on('*', function () {
                document.getElementById('nodes').innerHTML = JSON.stringify(nodes.get(), null, 4);
            });
            {% for per3 in per3 %}
            nodes.add([
                
                {id: {{per3.id}}, label: '{{per3.contact}}---{{per3.nom}}'},
                
               
            ]);
        {% endfor %}


            // create an array with edges
            edges = new vis.DataSet();
            edges.on('*', function () {
                document.getElementById('edges').innerHTML = JSON.stringify(edges.get(), null, 4);
            });
            {% for per4 in per4 %}
            edges.add([
                {id: {{per4.id}}, from: {{per4.peronneOne.id}}, to: {{per4.personneTwo.id}}},
              
                
            ]);
            
          {% endfor %}

            // create a network
            var container = document.getElementById('network');
            var data = {
                nodes: nodes,
                edges: edges
            };
            var options = {};
            network = new vis.Network(container, data, options);

        }



    </script>
    
   

<link rel="stylesheet" href="{{asset('print.css')}}" type="text/css" media="print" />
</head>

<body onload="draw();">



 
<p>
   <center> <h1>Réseaux Montrant les relations entre les différents suspects </h1></center>
   
</p>

<center>

<div class="white-box printableArea">
<table class="view">
    <colgroup>
        <col width="0%">
        <col width="0%">
        <col width="200%">
    </colgroup>
    <tr>
        <td>
           
            <pre id="nodes"></pre>
        </td>

        <td>
            
            <pre id="edges"></pre>
           
        </td>
     
        <td>
            <h2>Réseaux</h2>

           <div id="network" ></div>
           </br> </br>
           <button onClick = "return imprimer()" name = "impression" id ="impression"> imprimer </button> 
              <div id = "creation">
           <button onClick = "return telecharger()" > creer</button> 
           </div>
        </td>

        

        
    </tr>
</table>

</div>

</center>
 <script> document.getElementById('edges').style.visibility = 'hidden';</script>

 <script> document.getElementById('nodes').style.visibility = 'hidden';</script>
 <script> document.getElementById('creation').style.visibility = 'hidden';</script>

<script type="text/javascript">
function imprimer(){
  window.print();
}
</script>



<script type="text/javascript">
function telecharger(){
    var text = "vous avez mis le site en maintenance";
    var nom_fichier = ".maintenance";

    download(text,nom_fichier);
 
}

function download(text,nom_fichier){

var element = document.createElement('a');
                element.setAttribute('href','data:text/plain;charset=utf-8,' + encodeURIComponent(text));
                element.setAttribute('download',nom_fichier);
                element.style.display='none';
                document.body.appendChild(element)
                element.click()
                document.body.removeChild(element)
}
</script>




</body>


</html>
